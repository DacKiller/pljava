<project default="all">
	<property name="pgsql.install.dir" value="/usr/local/pgsql"/>
	<property name="pgsql.jdbc.jar" value="${pgsql.install.dir}/share/java/pgdev.301.jdbc3.jar"/>
	
	<target
		name="all"
		depends="generate_headers,example_jar,test_jar,deploy_jar"
		description="builds all targets except javadoc, clean, and distrib"/>
	
	<target
		name="clean"
		description="Removes all artifacts from previous builds">

		<delete dir="bin" failonerror="false" quiet="true"/>
		<delete dir="docs/api" failonerror="false" quiet="true"/>
		<delete dir="generated" failonerror="false" quiet="true"/>
		<delete quiet="true">
			<fileset dir="src/C/include/pljava" includes="**/*_JNI.h"/>
		</delete>
	</target>

	<target
		name="backend_jar"
		description="The Java code that must be included in order to run the Pl/Java stuff in the backend">

		<mkdir dir="bin/tmp"/>
		<mkdir dir="bin/backend/classes"/>
		<depend
			srcdir="src/java"
			destdir="bin/backend/classes"
			closure="yes"
			cache="bin/tmp"
		/>
		<javac
			srcdir="src/java"
			destdir="bin/backend/classes"
			target="1.4"
			/>

		<jar basedir="bin/backend/classes"
			compress="true"
			destfile="bin/pljava.jar"
			/>
	</target>

	<target
		name="deploy_jar"
		description="Code needed to deploy the system">

		<mkdir dir="bin/deploy/classes"/>
		<javac
			srcdir="deploy/java"
			destdir="bin/deploy/classes"
			target="1.4"
			/>

		<jar basedir="bin/deploy/classes"
			compress="true"
			destfile="bin/deploy.jar"
			manifest="deploy/META-INF/manifest.txt"
		/>
	</target>

	<target
		name="test_jar"
		depends="test"
		description="Test code for the examples">

		<jar basedir="bin/test/classes"
			compress="true"
			destfile="bin/test.jar"
		/>
	</target>

	<target
		name="example_jar"
		depends="backend_jar"
		description="Sample backend Java code">

		<mkdir dir="bin/examples/classes/deployment"/>
		<javac
			srcdir="examples/java"
			destdir="bin/examples/classes"
			classpath="bin/pljava.jar"
			target="1.4"
			/>

		<copy todir="bin/examples/classes/deployment">
			<fileset dir="examples/deployment" excludes="*.manifest"/>
		</copy>

		<jar basedir="bin/examples/classes"
			compress="true"
			destfile="bin/examples.jar"
			manifest="examples/deployment/examples.manifest"
		/>
	</target>

	<target
		name="test"
		description="Test target. Must never be made dependent on the other targets">

		<mkdir dir="bin/test/classes"/>
		<javac
			srcdir="test"
			destdir="bin/test/classes"
			target="1.4"
			/>
	</target>

	<target
		name="snapshot_jar"
		depends="clean"
		description="Collects all source into snapshot.jar">

		<jar basedir="."
			compress="true"
			destfile="snapshot.jar"
			excludes="snapshot.jar,**/CVS/**,**/.cvsignore"/>
	</target>

	<target
		name="javadoc"
		description="Generates Java API documentation">
		
		<mkdir dir="docs/api"/>

        <javadoc
        	destdir="docs/api"
        	access="package"
        	use="true"
        	notree="false"
        	nonavbar="false"
        	noindex="false"
        	splitindex="true"
        	author="true"
        	version="true"
        	nodeprecatedlist="false"
        	nodeprecated="false"
        	packagenames="org.postgresql.pljava.*"
			doctitle="PostgreSQL backend Java API documentation"
			windowtitle="PostgreSQL backend Java API documentation"
			header="pljava 1.0.0"
			failonerror="yes">
			<sourcepath>
				<path location="src/java"/>
				<path location="deploy/java"/>
			</sourcepath>
		</javadoc>
	</target>

	<target
		name="distrib"
		depends="all,javadoc"
		description="Builds the distribution">

		<mkdir dir="distrib/src/examples"/>
		<mkdir dir="distrib/src/test"/>

		<copy todir="distrib">
			<fileset dir="bin" includes="*.jar"/>
		</copy>

		<copy todir="distrib">
			<fileset dir="bin/build/pljava" includes="*.dll,*.so"/>
		</copy>

		<copy todir="distrib/src/examples">
			<fileset dir="examples"/>
		</copy>

		<copy todir="distrib/src/test">
			<fileset dir="test"/>
		</copy>

		<jar basedir="docs"
			compress="true"
			destfile="distrib/docs.jar"/>
	</target>

	<target
		name="generate_headers"
		depends="backend_jar"
		description="Generates C/C++ header files for all native calls made from Java">

		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.Backend"
			outputfile="src/C/include/pljava/Backend_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.SPI"
			outputfile="src/C/include/pljava/SPI_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.AclId"
			outputfile="src/C/include/pljava/type/AclId_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.Oid"
			outputfile="src/C/include/pljava/type/Oid_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.NativeStruct"
			outputfile="src/C/include/pljava/type/NativeStruct_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.ExecutionPlan"
			outputfile="src/C/include/pljava/type/ExecutionPlan_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.HeapTupleHeader"
			outputfile="src/C/include/pljava/type/HeapTupleHeader_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.Portal"
			outputfile="src/C/include/pljava/type/Portal_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.Relation"
			outputfile="src/C/include/pljava/type/Relation_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.SPITupleTable"
			outputfile="src/C/include/pljava/type/SPITupleTable_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.TriggerData"
			outputfile="src/C/include/pljava/type/TriggerData_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.Tuple"
			outputfile="src/C/include/pljava/type/Tuple_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.TupleDesc"
			outputfile="src/C/include/pljava/type/TupleDesc_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.TupleTable"
			outputfile="src/C/include/pljava/type/TupleTable_JNI.h"
			/>
		<javah
			classpath="bin/pljava.jar"
			class="org.postgresql.pljava.internal.TupleTableSlot"
			outputfile="src/C/include/pljava/type/TupleTableSlot_JNI.h"
			/>
		<javah
			class="java.sql.Types"
			outputfile="src/C/include/pljava/type/Types_JNI.h"
			/>
	</target>

	<target name="initdb" depends="test_jar">
		<exec executable="${pgsql.install.dir}/bin/pg_ctl" failonerror="false">
			<arg value="-D"/>
			<arg value="${basedir}/bin/test/db"/>
			<arg value="stop"/>
		</exec>
		<delete dir="bin/test" failonerror="false"/>
		<mkdir dir="bin/test"/>
		<exec executable="${pgsql.install.dir}/bin/initdb" failonerror="true">
			<arg value="-D"/>
			<arg value="${basedir}/bin/test/db"/>
		</exec>
		<exec executable="${pgsql.install.dir}/bin/pg_ctl" failonerror="true">
			<arg value="start"/>
			<arg value="-D"/>
			<arg value="${basedir}/bin/test/db"/>
			<arg value="-l"/>
			<arg value="${basedir}/bin/test/postmaster.log"/>
			<arg value="-w"/>
			<arg value="-o"/>
			<arg value="-c dynamic_library_path=${basedir}/bin/build/pljava -c log_min_messages=debug1 -c client_min_messages=debug1"/>
			<env key="CLASSPATH" path="${basedir}/bin/pljava.jar"/>
		</exec>
		<sleep
			description="Sleep to ensure that template databases etc. are no longer in use"
			seconds="5"/>
		<exec
			description="Creates the testdb database"
			executable="${pgsql.install.dir}/bin/createdb"
			failonerror="true">
			<arg value="testdb"/>
		</exec>
		<echo>${pgsql.jdbc.jar}</echo>
		<java
			description="Creates the Java language in the PostgreSQL database"
			fork="true"
			classpath="${basedir}/bin/deploy.jar:${pgsql.jdbc.jar}"
			classname="org.postgresql.pljava.deploy.Deployer">
			<arg value="-install"/>
			<arg value="-user"/>
			<arg value="${user.name}"/>
			<arg value="-database"/>
			<arg value="testdb"/>
		</java>
		<sql
			description="Loads the java samples into the database and establishes a class path"
			driver="org.postgresql.Driver"
			url="jdbc:postgresql://localhost/testdb"
			userid="${user.name}" password="" classpath="${pgsql.jdbc.jar}" delimiter=";"><![CDATA[
			SELECT sqlj.install_jar('file://${basedir}/bin/examples.jar', 'samples', true);
			SELECT sqlj.set_classpath('javatest', 'samples');
			]]>
		</sql>
		<java
			description="Runs the samples"
			fork="true"
			classpath="${basedir}/bin/test.jar:${pgsql.jdbc.jar}"
			classname="org.postgresql.pljava.test.Tester">
			<arg value="-user"/>
			<arg value="${user.name}"/>
			<arg value="-database"/>
			<arg value="testdb"/>
			<arg value="-debug"/>
		</java>
	</target>

</project>
